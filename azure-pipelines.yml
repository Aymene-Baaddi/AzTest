# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'da85116b-3ab2-405c-82ec-16dc0b6fd72e'
  SONARQUBE_SERVICE_CONNECTION: 'http://192.168.1.191:9000'
  SONARQUBE_AUTH_TOKEN: 'sqp_6b7f9c0fa65afeb4179378cccfd75b533457795c'
  imageRepository: 'aaspipeline'
  containerRegistry: 'mywebapp.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: SonarQubeAnalysisFrontend
    displayName: 'SonarQube Analysis for Frontend Microservices'
    steps:
    - task: NodeTaskRunnerInstaller@0
      inputs:
        nodeVersion: '16'

    - script: |
        npm install -g sonar-scanner
      displayName: 'Install SonarQube Scanner'

    - script: |
        sonar-scanner \
          -Dsonar.projectKey=AASContainer_AASContainer_AZDpXRR0ttJVSlAH5UnY\
          -Dsonar.projectName=AASContainer \
          -Dsonar.sources=. \
          -Dsonar.host.url=$(SONARQUBE_SERVICE_CONNECTION) \
          -Dsonar.login=$(SONARQUBE_AUTH_TOKEN)
      displayName: 'Run SonarQube Analysis'

  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

- stage: Deploy
  displayName: Deploy to Azure App Service
  dependsOn: Build
  jobs:
  - job: Deploy
    displayName: Deploy to Azure App Service
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: AzureWebAppContainer@1
      displayName: Deploy Docker Image to Azure App Service
      inputs:
        azureSubscription: 'Temporary Subscription -  Hassoun (4c937cb0-557b-4a3d-b505-a43df1f5819b)'
        appName: 'containerpipeline'
        imageName: '$(containerRegistry)/$(imageRepository):$(tag)'
